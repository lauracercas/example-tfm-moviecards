name: Continuous Integration (CI)

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: moviecards-java
          path: "${{ github.workspace }}/target/*.jar"

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"

      - name: Install Google Chrome and ChromeDriver to e2e tests
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb
          sudo apt --fix-broken install -y

          CHROMEDRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
          curl -L -o chromedriver.zip https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
          unzip chromedriver.zip
          chmod +x chromedriver
          sudo mv chromedriver /usr/local/bin/

      - name: Run application to e2e tests
        run: mvn spring-boot:run -Dspring-boot.run.profiles=test & sleep 60

      - name: Run tests
        run: mvn clean verify -Ptest

  qa:
    name: QA
    needs: test
    runs-on: self-hosted
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"

      - name: Build with Maven skipping tests and with test profile
        run: mvn clean package -DskipTests

      - name: Sonarqube scan
        run: |
          mvn sonar:sonar -Dsonar.host.url=http://sonarqube:9000 -Dsonar.qualitygate.wait=true -Dsonar.login=admin -Dsonar.password=adminsonar

  deploy:
    runs-on: ubuntu-latest
    needs: qa
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: moviecards-java

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_8DEE393D431A45EE88056D5366430380 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_AB6217E73D984884A5EBC3196B55CE7D }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_22D17812F65045D08198808AE2478D6E }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'app-moviecards-lauracercas'
          slot-name: 'Production'
          package: '*.jar'
